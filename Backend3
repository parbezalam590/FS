// app.js

const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');

const app = express();
const PORT = 3000;

app.use(bodyParser.json());

// ----------------------
// MongoDB Connection
// ----------------------
mongoose
  .connect('mongodb://127.0.0.1:27017/bankdb')
  .then(() => console.log('Connected to MongoDB'))
  .catch(err => console.log(err));

// ----------------------
// User Schema
// ----------------------
const userSchema = new mongoose.Schema({
  name: String,
  balance: Number,
});

const User = mongoose.model('User', userSchema);

// ----------------------
// Route 1: Create Users
// ----------------------
app.post('/create-users', async (req, res) => {
  await User.deleteMany({}); // reset users

  const users = await User.insertMany([
    { name: 'Alice', balance: 1000 },
    { name: 'Bob', balance: 500 },
  ]);

  res.status(201).json({
    message: 'Users created.',
    users,
  });
});

// ----------------------
// Route 2: Transfer Money
// ----------------------
app.post('/transfer', async (req, res) => {
  const { fromUserId, toUserId, amount } = req.body;

  const sender = await User.findById(fromUserId);
  const receiver = await User.findById(toUserId);

  if (!sender || !receiver) {
    return res.status(404).json({ message: 'User not found' });
  }

  if (sender.balance < amount) {
    return res.status(400).json({ message: 'Insufficient balance' });
  }

  // Perform transfer
  sender.balance -= amount;
  receiver.balance += amount;

  await sender.save();
  await receiver.save();

  res.status(200).json({
    message: `Transferred $${amount} from ${sender.name} to ${receiver.name}.`,
    senderBalance: sender.balance,
    receiverBalance: receiver.balance,
  });
});

// ----------------------
// Start Server
// ----------------------
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
